# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'devpos-sc'
    backendAzureRmResourceGroupName: 'Strorage-RG'
    backendAzureRmStorageAccountName: 'storageaccount308081'
    backendAzureRmContainerName: 'marketing'
    backendAzureRmKey: 'function.tfstate'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'
    backendServiceArm: 'devpos-sc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'devpos-sc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-var-file=terraform.tfvars -out=tfplan'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'devpos-sc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-input=false tfplan'